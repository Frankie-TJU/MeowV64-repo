<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:y="http://www.yworks.com/xml/graphml">
  <key for="node" id="n" yfiles.type="nodegraphics"/>
  <key for="edge" id="e" yfiles.type="edgegraphics"/>
  <key for="node" id="d" attr.name="Description" attr.type="string"/>
  <graph id="G" edgedefault="directed">
    <node id="1">
      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">target</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
      <data key="d">RocketTop (RiscVSystem.target)</data>
      <graph id="1::" edgedefault="directed">
        <node id="1::63">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::62">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::61">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::60">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::59">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::58">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::57">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::56">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::55">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::54">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::53">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::51">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::50">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::49">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::48">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::47">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::46">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::44">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::43">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::42">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::41">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::40">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::39">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::37">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::36">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::35">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::34">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::33">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::32">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::30">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::29">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::28">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::27">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::26">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::25">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::23">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::22">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::21">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::20">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::19">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::18">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::16">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::15">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::14">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::11">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::10">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::9">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::8">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::7">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::6">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::5">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::4">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::3">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::1">
          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="431">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">bootROMDomainWrapper</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">ClockSinkDomain_1 (RiscVSystem.target.bootROMDomainWrapper)</data>
          <graph id="431::" edgedefault="directed">
            <node id="431::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="432">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">bootrom</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLROM (RiscVSystem.target.bootROMDomainWrapper.bootrom)</data>
              <graph id="432::" edgedefault="directed">
                <node id="432::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">
---------------------------------------------

On Input Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="410">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_18</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_43 (RiscVSystem.target.intsource_18)</data>
          <graph id="410::" edgedefault="directed">
            <node id="410::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="405">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_23</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_41 (RiscVSystem.target.intsink_23)</data>
          <graph id="405::" edgedefault="directed">
            <node id="405::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="403">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_22</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_40 (RiscVSystem.target.intsink_22)</data>
          <graph id="403::" edgedefault="directed">
            <node id="403::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="401">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_21</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_39 (RiscVSystem.target.intsink_21)</data>
          <graph id="401::" edgedefault="directed">
            <node id="401::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="398">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_17</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_42 (RiscVSystem.target.intsource_17)</data>
          <graph id="398::" edgedefault="directed">
            <node id="398::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="396">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_16</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_41 (RiscVSystem.target.intsource_16)</data>
          <graph id="396::" edgedefault="directed">
            <node id="396::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="394">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_15</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_40 (RiscVSystem.target.intsource_15)</data>
          <graph id="394::" edgedefault="directed">
            <node id="394::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="381">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_19</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_37 (RiscVSystem.target.intsink_19)</data>
          <graph id="381::" edgedefault="directed">
            <node id="381::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="379">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_18</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_36 (RiscVSystem.target.intsink_18)</data>
          <graph id="379::" edgedefault="directed">
            <node id="379::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="377">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_17</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_35 (RiscVSystem.target.intsink_17)</data>
          <graph id="377::" edgedefault="directed">
            <node id="377::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="374">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_14</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_39 (RiscVSystem.target.intsource_14)</data>
          <graph id="374::" edgedefault="directed">
            <node id="374::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="372">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_13</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_38 (RiscVSystem.target.intsource_13)</data>
          <graph id="372::" edgedefault="directed">
            <node id="372::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="370">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_12</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_37 (RiscVSystem.target.intsource_12)</data>
          <graph id="370::" edgedefault="directed">
            <node id="370::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="357">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_15</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_33 (RiscVSystem.target.intsink_15)</data>
          <graph id="357::" edgedefault="directed">
            <node id="357::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="355">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_14</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_32 (RiscVSystem.target.intsink_14)</data>
          <graph id="355::" edgedefault="directed">
            <node id="355::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="353">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_13</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_31 (RiscVSystem.target.intsink_13)</data>
          <graph id="353::" edgedefault="directed">
            <node id="353::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="350">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_11</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_36 (RiscVSystem.target.intsource_11)</data>
          <graph id="350::" edgedefault="directed">
            <node id="350::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="348">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_10</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_35 (RiscVSystem.target.intsource_10)</data>
          <graph id="348::" edgedefault="directed">
            <node id="348::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="346">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_9</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_34 (RiscVSystem.target.intsource_9)</data>
          <graph id="346::" edgedefault="directed">
            <node id="346::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="333">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_11</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_29 (RiscVSystem.target.intsink_11)</data>
          <graph id="333::" edgedefault="directed">
            <node id="333::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="331">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_10</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_28 (RiscVSystem.target.intsink_10)</data>
          <graph id="331::" edgedefault="directed">
            <node id="331::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="329">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_9</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_27 (RiscVSystem.target.intsink_9)</data>
          <graph id="329::" edgedefault="directed">
            <node id="329::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="326">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_8</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_33 (RiscVSystem.target.intsource_8)</data>
          <graph id="326::" edgedefault="directed">
            <node id="326::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="324">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_7</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_32 (RiscVSystem.target.intsource_7)</data>
          <graph id="324::" edgedefault="directed">
            <node id="324::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="322">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_6</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_31 (RiscVSystem.target.intsource_6)</data>
          <graph id="322::" edgedefault="directed">
            <node id="322::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="309">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_7</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_25 (RiscVSystem.target.intsink_7)</data>
          <graph id="309::" edgedefault="directed">
            <node id="309::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="307">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_6</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_24 (RiscVSystem.target.intsink_6)</data>
          <graph id="307::" edgedefault="directed">
            <node id="307::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="305">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_5</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_23 (RiscVSystem.target.intsink_5)</data>
          <graph id="305::" edgedefault="directed">
            <node id="305::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="302">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_5</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_30 (RiscVSystem.target.intsource_5)</data>
          <graph id="302::" edgedefault="directed">
            <node id="302::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="300">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_4</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_29 (RiscVSystem.target.intsource_4)</data>
          <graph id="300::" edgedefault="directed">
            <node id="300::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="298">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_28 (RiscVSystem.target.intsource_3)</data>
          <graph id="298::" edgedefault="directed">
            <node id="298::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="285">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_21 (RiscVSystem.target.intsink_3)</data>
          <graph id="285::" edgedefault="directed">
            <node id="285::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="283">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_20 (RiscVSystem.target.intsink_2)</data>
          <graph id="283::" edgedefault="directed">
            <node id="283::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="281">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_19 (RiscVSystem.target.intsink_1)</data>
          <graph id="281::" edgedefault="directed">
            <node id="281::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="278">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_27 (RiscVSystem.target.intsource_2)</data>
          <graph id="278::" edgedefault="directed">
            <node id="278::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="276">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_26 (RiscVSystem.target.intsource_1)</data>
          <graph id="276::" edgedefault="directed">
            <node id="276::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="274">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_25 (RiscVSystem.target.intsource)</data>
          <graph id="274::" edgedefault="directed">
            <node id="274::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="264">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
          <data key="d">BundleBridgeNexus_61 (RiscVSystem.target.broadcast)</data>
          <graph id="264::" edgedefault="directed">
            <node id="264::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
          </graph>
        </node>
        <node id="263">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tileHartIdNexusNode</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">BundleBridgeNexus_60 (RiscVSystem.target.tileHartIdNexusNode)</data>
          <graph id="263::" edgedefault="directed">
            <node id="263::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
          </graph>
        </node>
        <node id="262">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntXbar_9 (RiscVSystem.target.xbar_2)</data>
          <graph id="262::" edgedefault="directed">
            <node id="262::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
          </graph>
        </node>
        <node id="261">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntXbar_8 (RiscVSystem.target.xbar_1)</data>
          <graph id="261::" edgedefault="directed">
            <node id="261::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
          </graph>
        </node>
        <node id="260">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">IntXbar_7 (RiscVSystem.target.xbar)</data>
          <graph id="260::" edgedefault="directed">
            <node id="260::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
          </graph>
        </node>
        <node id="242">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">debug_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">TLDebugModule (RiscVSystem.target.debug_1)</data>
          <graph id="242::" edgedefault="directed">
            <node id="252">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmInner</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLDebugModuleInnerAsync (RiscVSystem.target.debug_1.dmInner)</data>
              <graph id="252::" edgedefault="directed">
                <node id="255">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmiXing</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLAsyncCrossingSink (RiscVSystem.target.debug_1.dmInner.dmiXing)</data>
                  <graph id="255::" edgedefault="directed">
                    <node id="255::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="253">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmInner</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLDebugModuleInner (RiscVSystem.target.debug_1.dmInner.dmInner)</data>
                  <graph id="253::" edgedefault="directed">
                    <node id="253::2">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="253::1">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">
---------------------------------------------

On Input Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                    <node id="253::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">
---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                    <node id="254">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">sb2tlOpt</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">SBToTL (RiscVSystem.target.debug_1.dmInner.dmInner.sb2tlOpt)</data>
                      <graph id="254::" edgedefault="directed">
                        <node id="254::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 1
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                      </graph>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="243">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmOuter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLDebugModuleOuterAsync (RiscVSystem.target.debug_1.dmOuter)</data>
              <graph id="243::" edgedefault="directed">
                <node id="251">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">asource</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLAsyncCrossingSource (RiscVSystem.target.debug_1.dmOuter.asource)</data>
                  <graph id="251::" edgedefault="directed">
                    <node id="251::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 3

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="248">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmiBypass</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLBusBypass (RiscVSystem.target.debug_1.dmOuter.dmiBypass)</data>
                  <graph id="248::" edgedefault="directed">
                    <node id="248::1">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="248::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="250">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">error</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLError_1 (RiscVSystem.target.debug_1.dmOuter.dmiBypass.error)</data>
                      <graph id="250::" edgedefault="directed">
                        <node id="250::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = error
Slave Address = List(AddressSet(0x0, 0xffffffffffffffffffffffffffffffff))
supports = acquireT = TransferSizes[1, 4]
acquireB = TransferSizes[1, 4]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[1, 4]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="249">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">bar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBusBypassBar (RiscVSystem.target.debug_1.dmOuter.dmiBypass.bar)</data>
                      <graph id="249::" edgedefault="directed">
                        <node id="249::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = error
Slave Address = List(AddressSet(0x0, 0xffffffffffffffffffffffffffffffff))
supports = acquireT = TransferSizes[1, 4]
acquireB = TransferSizes[1, 4]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[1, 4]



On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 3

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                  </graph>
                </node>
                <node id="247">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">IntSyncCrossingSource_24 (RiscVSystem.target.debug_1.dmOuter.intsource)</data>
                  <graph id="247::" edgedefault="directed">
                    <node id="247::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
alreadyRegistered:true</data>
                    </node>
                  </graph>
                </node>
                <node id="246">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmOuter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLDebugModuleOuter (RiscVSystem.target.debug_1.dmOuter.dmOuter)</data>
                  <graph id="246::" edgedefault="directed">
                    <node id="246::1">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">
---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmOuter
Slave Address = List(AddressSet(0x40, 0x3), AddressSet(0x48, 0x3), AddressSet(0x50, 0x3), AddressSet(0x54, 0x3))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                    <node id="246::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="245">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmi2tl</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">DMIToTL (RiscVSystem.target.debug_1.dmOuter.dmi2tl)</data>
                  <graph id="245::" edgedefault="directed">
                    <node id="245::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]



Slave Name = dmOuter
Slave Address = List(AddressSet(0x40, 0x3), AddressSet(0x48, 0x3), AddressSet(0x50, 0x3), AddressSet(0x54, 0x3))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="244">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmiXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLXbar_25 (RiscVSystem.target.debug_1.dmOuter.dmiXbar)</data>
                  <graph id="244::" edgedefault="directed">
                    <node id="244::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmOuter
Slave Address = List(AddressSet(0x40, 0x3), AddressSet(0x48, 0x3), AddressSet(0x50, 0x3), AddressSet(0x54, 0x3))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[4, 4]
putFull = TransferSizes[4, 4]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 4
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x4c, 0x3), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]



Slave Name = dmOuter
Slave Address = List(AddressSet(0x40, 0x3), AddressSet(0x48, 0x3), AddressSet(0x50, 0x3), AddressSet(0x54, 0x3))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 4]
putFull = TransferSizes[1, 4]
putPartial = TransferSizes[1, 4]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="241">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">debugCustomXbarOpt</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">DebugCustomXbar (RiscVSystem.target.debugCustomXbarOpt)</data>
          <graph id="241::" edgedefault="directed">
            <node id="241::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
          </graph>
        </node>
        <node id="238">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clint</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">CLINT (RiscVSystem.target.clint)</data>
          <graph id="238::" edgedefault="directed">
            <node id="238::1">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="238::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">
---------------------------------------------

On Input Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]



, 
</data>
            </node>
          </graph>
        </node>
        <node id="234">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">plicDomainWrapper</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">ClockSinkDomain (RiscVSystem.target.plicDomainWrapper)</data>
          <graph id="234::" edgedefault="directed">
            <node id="234::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="235">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">plic</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLPLIC (RiscVSystem.target.plicDomainWrapper.plic)</data>
              <graph id="235::" edgedefault="directed">
                <node id="235::1">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
</data>
                </node>
                <node id="235::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">
---------------------------------------------

On Input Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 1

Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="208">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_prci_domain_5</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">TilePRCIDomain_5 (RiscVSystem.target.tile_prci_domain_5)</data>
          <graph id="208::" edgedefault="directed">
            <node id="208::12">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="208::11">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="208::10">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="208::7">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="208::6">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="208::5">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="208::3">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="208::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="408">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tracecore</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_59 (RiscVSystem.target.tile_prci_domain_5.tracecore)</data>
              <graph id="408::" edgedefault="directed">
                <node id="408::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="407">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">trace</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_58 (RiscVSystem.target.tile_prci_domain_5.trace)</data>
              <graph id="407::" edgedefault="directed">
                <node id="407::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="406">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_23 (RiscVSystem.target.tile_prci_domain_5.intsource_3)</data>
              <graph id="406::" edgedefault="directed">
                <node id="406::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="404">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_22 (RiscVSystem.target.tile_prci_domain_5.intsource_2)</data>
              <graph id="404::" edgedefault="directed">
                <node id="404::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="402">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_21 (RiscVSystem.target.tile_prci_domain_5.intsource_1)</data>
              <graph id="402::" edgedefault="directed">
                <node id="402::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="397">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_17 (RiscVSystem.target.tile_prci_domain_5.intsink_3)</data>
              <graph id="397::" edgedefault="directed">
                <node id="397::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="395">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_16 (RiscVSystem.target.tile_prci_domain_5.intsink_2)</data>
              <graph id="395::" edgedefault="directed">
                <node id="395::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="393">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_15 (RiscVSystem.target.tile_prci_domain_5.intsink_1)</data>
              <graph id="393::" edgedefault="directed">
                <node id="393::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="392">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncAsyncCrossingSink_6 (RiscVSystem.target.tile_prci_domain_5.intsink)</data>
              <graph id="392::" edgedefault="directed">
                <node id="392::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:3</data>
                </node>
              </graph>
            </node>
            <node id="387">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLBuffer_56 (RiscVSystem.target.tile_prci_domain_5.buffer_1)</data>
              <graph id="387::" edgedefault="directed">
                <node id="387::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="386">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLBuffer_55 (RiscVSystem.target.tile_prci_domain_5.buffer)</data>
              <graph id="386::" edgedefault="directed">
                <node id="386::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="210">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_11 (RiscVSystem.target.tile_prci_domain_5.clockNode)</data>
              <graph id="210::" edgedefault="directed">
                <node id="210::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="209">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_reset_domain</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TileResetDomain_5 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain)</data>
              <graph id="209::" edgedefault="directed">
                <node id="209::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="211">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">meowv64_tile</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">MeowV64Tile_5 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile)</data>
                  <graph id="211::" edgedefault="directed">
                    <node id="211::22">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::21">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::18">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="211::17">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="211::16">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="211::15">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="211::14">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="211::12">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::10">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::9">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::8">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::6">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::5">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::4">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::3">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::2">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::1">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="211::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="233">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_38 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.widget_3)</data>
                      <graph id="233::" edgedefault="directed">
                        <node id="233::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="232">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_54 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.buffer_3)</data>
                      <graph id="232::" edgedefault="directed">
                        <node id="232::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="231">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_24 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.xbar)</data>
                      <graph id="231::" edgedefault="directed">
                        <node id="231::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="230">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_37 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.widget_2)</data>
                      <graph id="230::" edgedefault="directed">
                        <node id="230::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="229">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_53 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.buffer_2)</data>
                      <graph id="229::" edgedefault="directed">
                        <node id="229::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="228">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_36 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.widget_1)</data>
                      <graph id="228::" edgedefault="directed">
                        <node id="228::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="227">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_52 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.buffer_1)</data>
                      <graph id="227::" edgedefault="directed">
                        <node id="227::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="226">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_35 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.widget)</data>
                      <graph id="226::" edgedefault="directed">
                        <node id="226::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="225">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_51 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.buffer)</data>
                      <graph id="225::" edgedefault="directed">
                        <node id="225::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="224">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">addrGen</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">AddressGeneration_5 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.addrGen)</data>
                      <graph id="224::" edgedefault="directed">
                        <node id="224::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="224::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="223">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffets</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">Buffets_5 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.buffets)</data>
                      <graph id="223::" edgedefault="directed">
                        <node id="223::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                        <node id="223::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="222">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">adapter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">MeowV64TileLinkAdapter_5 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.adapter)</data>
                      <graph id="222::" edgedefault="directed">
                        <node id="222::3">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="222::2">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="222::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="222::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="221">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_4</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_57 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.broadcast_4)</data>
                      <graph id="221::" edgedefault="directed">
                        <node id="221::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="220">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">nexus_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_56 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.nexus_1)</data>
                      <graph id="220::" edgedefault="directed">
                        <node id="220::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="219">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_3</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_55 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.broadcast_3)</data>
                      <graph id="219::" edgedefault="directed">
                        <node id="219::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="217">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_2</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_53 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.broadcast_2)</data>
                      <graph id="217::" edgedefault="directed">
                        <node id="217::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="216">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_52 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.broadcast_1)</data>
                      <graph id="216::" edgedefault="directed">
                        <node id="216::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="215">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_51 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.broadcast)</data>
                      <graph id="215::" edgedefault="directed">
                        <node id="215::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="214">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">IntXbar_6 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.intXbar)</data>
                      <graph id="214::" edgedefault="directed">
                        <node id="214::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">Interrupt Node
, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="212">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tlMasterXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_22 (RiscVSystem.target.tile_prci_domain_5.tile_reset_domain.meowv64_tile.tlMasterXbar)</data>
                      <graph id="212::" edgedefault="directed">
                        <node id="212::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="182">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_prci_domain_4</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">TilePRCIDomain_4 (RiscVSystem.target.tile_prci_domain_4)</data>
          <graph id="182::" edgedefault="directed">
            <node id="182::12">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="182::11">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="182::10">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="182::7">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="182::6">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="182::5">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="182::3">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="182::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="384">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tracecore</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_50 (RiscVSystem.target.tile_prci_domain_4.tracecore)</data>
              <graph id="384::" edgedefault="directed">
                <node id="384::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="383">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">trace</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_49 (RiscVSystem.target.tile_prci_domain_4.trace)</data>
              <graph id="383::" edgedefault="directed">
                <node id="383::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="382">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_19 (RiscVSystem.target.tile_prci_domain_4.intsource_3)</data>
              <graph id="382::" edgedefault="directed">
                <node id="382::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="380">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_18 (RiscVSystem.target.tile_prci_domain_4.intsource_2)</data>
              <graph id="380::" edgedefault="directed">
                <node id="380::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="378">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_17 (RiscVSystem.target.tile_prci_domain_4.intsource_1)</data>
              <graph id="378::" edgedefault="directed">
                <node id="378::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="373">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_14 (RiscVSystem.target.tile_prci_domain_4.intsink_3)</data>
              <graph id="373::" edgedefault="directed">
                <node id="373::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="371">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_13 (RiscVSystem.target.tile_prci_domain_4.intsink_2)</data>
              <graph id="371::" edgedefault="directed">
                <node id="371::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="369">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_12 (RiscVSystem.target.tile_prci_domain_4.intsink_1)</data>
              <graph id="369::" edgedefault="directed">
                <node id="369::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="368">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncAsyncCrossingSink_5 (RiscVSystem.target.tile_prci_domain_4.intsink)</data>
              <graph id="368::" edgedefault="directed">
                <node id="368::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:3</data>
                </node>
              </graph>
            </node>
            <node id="363">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLBuffer_48 (RiscVSystem.target.tile_prci_domain_4.buffer_1)</data>
              <graph id="363::" edgedefault="directed">
                <node id="363::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="362">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLBuffer_47 (RiscVSystem.target.tile_prci_domain_4.buffer)</data>
              <graph id="362::" edgedefault="directed">
                <node id="362::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="184">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_10 (RiscVSystem.target.tile_prci_domain_4.clockNode)</data>
              <graph id="184::" edgedefault="directed">
                <node id="184::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="183">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_reset_domain</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TileResetDomain_4 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain)</data>
              <graph id="183::" edgedefault="directed">
                <node id="183::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="185">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">meowv64_tile</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">MeowV64Tile_4 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile)</data>
                  <graph id="185::" edgedefault="directed">
                    <node id="185::22">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::21">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::18">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="185::17">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="185::16">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="185::15">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="185::14">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="185::12">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::10">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::9">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::8">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::6">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::5">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::4">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::3">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::2">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::1">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="185::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="207">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_34 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.widget_3)</data>
                      <graph id="207::" edgedefault="directed">
                        <node id="207::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="206">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_46 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.buffer_3)</data>
                      <graph id="206::" edgedefault="directed">
                        <node id="206::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="205">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_21 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.xbar)</data>
                      <graph id="205::" edgedefault="directed">
                        <node id="205::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="204">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_33 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.widget_2)</data>
                      <graph id="204::" edgedefault="directed">
                        <node id="204::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="203">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_45 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.buffer_2)</data>
                      <graph id="203::" edgedefault="directed">
                        <node id="203::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="202">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_32 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.widget_1)</data>
                      <graph id="202::" edgedefault="directed">
                        <node id="202::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="201">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_44 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.buffer_1)</data>
                      <graph id="201::" edgedefault="directed">
                        <node id="201::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="200">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_31 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.widget)</data>
                      <graph id="200::" edgedefault="directed">
                        <node id="200::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="199">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_43 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.buffer)</data>
                      <graph id="199::" edgedefault="directed">
                        <node id="199::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="198">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">addrGen</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">AddressGeneration_4 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.addrGen)</data>
                      <graph id="198::" edgedefault="directed">
                        <node id="198::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="198::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="197">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffets</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">Buffets_4 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.buffets)</data>
                      <graph id="197::" edgedefault="directed">
                        <node id="197::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                        <node id="197::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="196">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">adapter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">MeowV64TileLinkAdapter_4 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.adapter)</data>
                      <graph id="196::" edgedefault="directed">
                        <node id="196::3">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="196::2">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="196::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="196::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="195">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_4</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_48 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.broadcast_4)</data>
                      <graph id="195::" edgedefault="directed">
                        <node id="195::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="194">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">nexus_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_47 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.nexus_1)</data>
                      <graph id="194::" edgedefault="directed">
                        <node id="194::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="193">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_3</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_46 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.broadcast_3)</data>
                      <graph id="193::" edgedefault="directed">
                        <node id="193::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="191">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_2</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_44 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.broadcast_2)</data>
                      <graph id="191::" edgedefault="directed">
                        <node id="191::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="190">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_43 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.broadcast_1)</data>
                      <graph id="190::" edgedefault="directed">
                        <node id="190::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="189">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_42 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.broadcast)</data>
                      <graph id="189::" edgedefault="directed">
                        <node id="189::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="188">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">IntXbar_5 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.intXbar)</data>
                      <graph id="188::" edgedefault="directed">
                        <node id="188::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">Interrupt Node
, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="186">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tlMasterXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_19 (RiscVSystem.target.tile_prci_domain_4.tile_reset_domain.meowv64_tile.tlMasterXbar)</data>
                      <graph id="186::" edgedefault="directed">
                        <node id="186::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="156">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_prci_domain_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">TilePRCIDomain_3 (RiscVSystem.target.tile_prci_domain_3)</data>
          <graph id="156::" edgedefault="directed">
            <node id="156::12">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="156::11">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="156::10">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="156::7">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="156::6">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="156::5">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="156::3">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="156::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="360">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tracecore</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_41 (RiscVSystem.target.tile_prci_domain_3.tracecore)</data>
              <graph id="360::" edgedefault="directed">
                <node id="360::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="359">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">trace</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_40 (RiscVSystem.target.tile_prci_domain_3.trace)</data>
              <graph id="359::" edgedefault="directed">
                <node id="359::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="358">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_15 (RiscVSystem.target.tile_prci_domain_3.intsource_3)</data>
              <graph id="358::" edgedefault="directed">
                <node id="358::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="356">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_14 (RiscVSystem.target.tile_prci_domain_3.intsource_2)</data>
              <graph id="356::" edgedefault="directed">
                <node id="356::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="354">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_13 (RiscVSystem.target.tile_prci_domain_3.intsource_1)</data>
              <graph id="354::" edgedefault="directed">
                <node id="354::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="349">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_11 (RiscVSystem.target.tile_prci_domain_3.intsink_3)</data>
              <graph id="349::" edgedefault="directed">
                <node id="349::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="347">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_10 (RiscVSystem.target.tile_prci_domain_3.intsink_2)</data>
              <graph id="347::" edgedefault="directed">
                <node id="347::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="345">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_9 (RiscVSystem.target.tile_prci_domain_3.intsink_1)</data>
              <graph id="345::" edgedefault="directed">
                <node id="345::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="344">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncAsyncCrossingSink_4 (RiscVSystem.target.tile_prci_domain_3.intsink)</data>
              <graph id="344::" edgedefault="directed">
                <node id="344::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:3</data>
                </node>
              </graph>
            </node>
            <node id="339">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLBuffer_40 (RiscVSystem.target.tile_prci_domain_3.buffer_1)</data>
              <graph id="339::" edgedefault="directed">
                <node id="339::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="338">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLBuffer_39 (RiscVSystem.target.tile_prci_domain_3.buffer)</data>
              <graph id="338::" edgedefault="directed">
                <node id="338::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="158">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_9 (RiscVSystem.target.tile_prci_domain_3.clockNode)</data>
              <graph id="158::" edgedefault="directed">
                <node id="158::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="157">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_reset_domain</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TileResetDomain_3 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain)</data>
              <graph id="157::" edgedefault="directed">
                <node id="157::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="159">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">meowv64_tile</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">MeowV64Tile_3 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile)</data>
                  <graph id="159::" edgedefault="directed">
                    <node id="159::22">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::21">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::18">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="159::17">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="159::16">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="159::15">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="159::14">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="159::12">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::10">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::9">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::8">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::6">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::5">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::4">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::3">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::2">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::1">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="159::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="181">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_30 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.widget_3)</data>
                      <graph id="181::" edgedefault="directed">
                        <node id="181::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="180">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_38 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.buffer_3)</data>
                      <graph id="180::" edgedefault="directed">
                        <node id="180::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="179">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_18 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.xbar)</data>
                      <graph id="179::" edgedefault="directed">
                        <node id="179::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="178">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_29 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.widget_2)</data>
                      <graph id="178::" edgedefault="directed">
                        <node id="178::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="177">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_37 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.buffer_2)</data>
                      <graph id="177::" edgedefault="directed">
                        <node id="177::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="176">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_28 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.widget_1)</data>
                      <graph id="176::" edgedefault="directed">
                        <node id="176::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="175">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_36 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.buffer_1)</data>
                      <graph id="175::" edgedefault="directed">
                        <node id="175::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="174">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_27 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.widget)</data>
                      <graph id="174::" edgedefault="directed">
                        <node id="174::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="173">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_35 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.buffer)</data>
                      <graph id="173::" edgedefault="directed">
                        <node id="173::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="172">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">addrGen</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">AddressGeneration_3 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.addrGen)</data>
                      <graph id="172::" edgedefault="directed">
                        <node id="172::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="172::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="171">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffets</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">Buffets_3 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.buffets)</data>
                      <graph id="171::" edgedefault="directed">
                        <node id="171::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                        <node id="171::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="170">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">adapter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">MeowV64TileLinkAdapter_3 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.adapter)</data>
                      <graph id="170::" edgedefault="directed">
                        <node id="170::3">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="170::2">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="170::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="170::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="169">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_4</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_39 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.broadcast_4)</data>
                      <graph id="169::" edgedefault="directed">
                        <node id="169::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="168">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">nexus_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_38 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.nexus_1)</data>
                      <graph id="168::" edgedefault="directed">
                        <node id="168::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="167">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_3</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_37 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.broadcast_3)</data>
                      <graph id="167::" edgedefault="directed">
                        <node id="167::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="165">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_2</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_35 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.broadcast_2)</data>
                      <graph id="165::" edgedefault="directed">
                        <node id="165::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="164">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_34 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.broadcast_1)</data>
                      <graph id="164::" edgedefault="directed">
                        <node id="164::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="163">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_33 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.broadcast)</data>
                      <graph id="163::" edgedefault="directed">
                        <node id="163::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="162">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">IntXbar_4 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.intXbar)</data>
                      <graph id="162::" edgedefault="directed">
                        <node id="162::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">Interrupt Node
, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="160">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tlMasterXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_16 (RiscVSystem.target.tile_prci_domain_3.tile_reset_domain.meowv64_tile.tlMasterXbar)</data>
                      <graph id="160::" edgedefault="directed">
                        <node id="160::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="130">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_prci_domain_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">TilePRCIDomain_2 (RiscVSystem.target.tile_prci_domain_2)</data>
          <graph id="130::" edgedefault="directed">
            <node id="130::12">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="130::11">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="130::10">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="130::7">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="130::6">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="130::5">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="130::3">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="130::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="336">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tracecore</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_32 (RiscVSystem.target.tile_prci_domain_2.tracecore)</data>
              <graph id="336::" edgedefault="directed">
                <node id="336::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="335">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">trace</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_31 (RiscVSystem.target.tile_prci_domain_2.trace)</data>
              <graph id="335::" edgedefault="directed">
                <node id="335::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="334">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_11 (RiscVSystem.target.tile_prci_domain_2.intsource_3)</data>
              <graph id="334::" edgedefault="directed">
                <node id="334::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="332">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_10 (RiscVSystem.target.tile_prci_domain_2.intsource_2)</data>
              <graph id="332::" edgedefault="directed">
                <node id="332::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="330">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_9 (RiscVSystem.target.tile_prci_domain_2.intsource_1)</data>
              <graph id="330::" edgedefault="directed">
                <node id="330::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="325">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_8 (RiscVSystem.target.tile_prci_domain_2.intsink_3)</data>
              <graph id="325::" edgedefault="directed">
                <node id="325::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="323">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_7 (RiscVSystem.target.tile_prci_domain_2.intsink_2)</data>
              <graph id="323::" edgedefault="directed">
                <node id="323::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="321">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_6 (RiscVSystem.target.tile_prci_domain_2.intsink_1)</data>
              <graph id="321::" edgedefault="directed">
                <node id="321::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="320">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncAsyncCrossingSink_3 (RiscVSystem.target.tile_prci_domain_2.intsink)</data>
              <graph id="320::" edgedefault="directed">
                <node id="320::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:3</data>
                </node>
              </graph>
            </node>
            <node id="315">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLBuffer_32 (RiscVSystem.target.tile_prci_domain_2.buffer_1)</data>
              <graph id="315::" edgedefault="directed">
                <node id="315::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="314">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLBuffer_31 (RiscVSystem.target.tile_prci_domain_2.buffer)</data>
              <graph id="314::" edgedefault="directed">
                <node id="314::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="132">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_8 (RiscVSystem.target.tile_prci_domain_2.clockNode)</data>
              <graph id="132::" edgedefault="directed">
                <node id="132::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="131">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_reset_domain</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TileResetDomain_2 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain)</data>
              <graph id="131::" edgedefault="directed">
                <node id="131::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="133">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">meowv64_tile</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">MeowV64Tile_2 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile)</data>
                  <graph id="133::" edgedefault="directed">
                    <node id="133::22">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::21">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::18">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="133::17">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="133::16">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="133::15">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="133::14">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="133::12">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::10">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::9">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::8">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::6">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::5">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::4">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::3">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::2">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::1">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="133::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="155">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_26 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.widget_3)</data>
                      <graph id="155::" edgedefault="directed">
                        <node id="155::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="154">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_30 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.buffer_3)</data>
                      <graph id="154::" edgedefault="directed">
                        <node id="154::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="153">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_15 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.xbar)</data>
                      <graph id="153::" edgedefault="directed">
                        <node id="153::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="152">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_25 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.widget_2)</data>
                      <graph id="152::" edgedefault="directed">
                        <node id="152::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="151">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_29 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.buffer_2)</data>
                      <graph id="151::" edgedefault="directed">
                        <node id="151::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="150">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_24 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.widget_1)</data>
                      <graph id="150::" edgedefault="directed">
                        <node id="150::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="149">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_28 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.buffer_1)</data>
                      <graph id="149::" edgedefault="directed">
                        <node id="149::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="148">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_23 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.widget)</data>
                      <graph id="148::" edgedefault="directed">
                        <node id="148::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="147">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_27 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.buffer)</data>
                      <graph id="147::" edgedefault="directed">
                        <node id="147::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="146">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">addrGen</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">AddressGeneration_2 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.addrGen)</data>
                      <graph id="146::" edgedefault="directed">
                        <node id="146::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="146::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="145">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffets</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">Buffets_2 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.buffets)</data>
                      <graph id="145::" edgedefault="directed">
                        <node id="145::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                        <node id="145::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="144">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">adapter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">MeowV64TileLinkAdapter_2 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.adapter)</data>
                      <graph id="144::" edgedefault="directed">
                        <node id="144::3">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="144::2">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="144::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="144::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="143">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_4</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_30 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.broadcast_4)</data>
                      <graph id="143::" edgedefault="directed">
                        <node id="143::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="142">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">nexus_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_29 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.nexus_1)</data>
                      <graph id="142::" edgedefault="directed">
                        <node id="142::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="141">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_3</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_28 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.broadcast_3)</data>
                      <graph id="141::" edgedefault="directed">
                        <node id="141::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="139">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_2</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_26 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.broadcast_2)</data>
                      <graph id="139::" edgedefault="directed">
                        <node id="139::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="138">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_25 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.broadcast_1)</data>
                      <graph id="138::" edgedefault="directed">
                        <node id="138::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="137">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_24 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.broadcast)</data>
                      <graph id="137::" edgedefault="directed">
                        <node id="137::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="136">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">IntXbar_3 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.intXbar)</data>
                      <graph id="136::" edgedefault="directed">
                        <node id="136::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">Interrupt Node
, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="134">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tlMasterXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_13 (RiscVSystem.target.tile_prci_domain_2.tile_reset_domain.meowv64_tile.tlMasterXbar)</data>
                      <graph id="134::" edgedefault="directed">
                        <node id="134::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="104">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_prci_domain_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">TilePRCIDomain_1 (RiscVSystem.target.tile_prci_domain_1)</data>
          <graph id="104::" edgedefault="directed">
            <node id="104::12">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="104::11">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="104::10">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="104::7">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="104::6">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="104::5">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="104::3">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="104::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="312">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tracecore</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_23 (RiscVSystem.target.tile_prci_domain_1.tracecore)</data>
              <graph id="312::" edgedefault="directed">
                <node id="312::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="311">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">trace</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_22 (RiscVSystem.target.tile_prci_domain_1.trace)</data>
              <graph id="311::" edgedefault="directed">
                <node id="311::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="310">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_7 (RiscVSystem.target.tile_prci_domain_1.intsource_3)</data>
              <graph id="310::" edgedefault="directed">
                <node id="310::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="308">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_6 (RiscVSystem.target.tile_prci_domain_1.intsource_2)</data>
              <graph id="308::" edgedefault="directed">
                <node id="308::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="306">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_5 (RiscVSystem.target.tile_prci_domain_1.intsource_1)</data>
              <graph id="306::" edgedefault="directed">
                <node id="306::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="301">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_5 (RiscVSystem.target.tile_prci_domain_1.intsink_3)</data>
              <graph id="301::" edgedefault="directed">
                <node id="301::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="299">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_4 (RiscVSystem.target.tile_prci_domain_1.intsink_2)</data>
              <graph id="299::" edgedefault="directed">
                <node id="299::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="297">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_3 (RiscVSystem.target.tile_prci_domain_1.intsink_1)</data>
              <graph id="297::" edgedefault="directed">
                <node id="297::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="296">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncAsyncCrossingSink_2 (RiscVSystem.target.tile_prci_domain_1.intsink)</data>
              <graph id="296::" edgedefault="directed">
                <node id="296::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:3</data>
                </node>
              </graph>
            </node>
            <node id="291">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLBuffer_24 (RiscVSystem.target.tile_prci_domain_1.buffer_1)</data>
              <graph id="291::" edgedefault="directed">
                <node id="291::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="290">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLBuffer_23 (RiscVSystem.target.tile_prci_domain_1.buffer)</data>
              <graph id="290::" edgedefault="directed">
                <node id="290::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="106">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_7 (RiscVSystem.target.tile_prci_domain_1.clockNode)</data>
              <graph id="106::" edgedefault="directed">
                <node id="106::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="105">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_reset_domain</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TileResetDomain_1 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain)</data>
              <graph id="105::" edgedefault="directed">
                <node id="105::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="107">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">meowv64_tile</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">MeowV64Tile_1 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile)</data>
                  <graph id="107::" edgedefault="directed">
                    <node id="107::22">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::21">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::18">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="107::17">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="107::16">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="107::15">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="107::14">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="107::12">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::10">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::9">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::8">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::6">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::5">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::4">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::3">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::2">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::1">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="107::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="129">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_22 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.widget_3)</data>
                      <graph id="129::" edgedefault="directed">
                        <node id="129::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="128">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_22 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.buffer_3)</data>
                      <graph id="128::" edgedefault="directed">
                        <node id="128::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="127">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_12 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.xbar)</data>
                      <graph id="127::" edgedefault="directed">
                        <node id="127::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="126">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_21 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.widget_2)</data>
                      <graph id="126::" edgedefault="directed">
                        <node id="126::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="125">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_21 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.buffer_2)</data>
                      <graph id="125::" edgedefault="directed">
                        <node id="125::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="124">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_20 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.widget_1)</data>
                      <graph id="124::" edgedefault="directed">
                        <node id="124::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="123">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_20 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.buffer_1)</data>
                      <graph id="123::" edgedefault="directed">
                        <node id="123::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="122">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_19 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.widget)</data>
                      <graph id="122::" edgedefault="directed">
                        <node id="122::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="121">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_19 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.buffer)</data>
                      <graph id="121::" edgedefault="directed">
                        <node id="121::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="120">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">addrGen</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">AddressGeneration_1 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.addrGen)</data>
                      <graph id="120::" edgedefault="directed">
                        <node id="120::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="120::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="119">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffets</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">Buffets_1 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.buffets)</data>
                      <graph id="119::" edgedefault="directed">
                        <node id="119::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                        <node id="119::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="118">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">adapter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">MeowV64TileLinkAdapter_1 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.adapter)</data>
                      <graph id="118::" edgedefault="directed">
                        <node id="118::3">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="118::2">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="118::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="118::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="117">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_4</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_21 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.broadcast_4)</data>
                      <graph id="117::" edgedefault="directed">
                        <node id="117::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="116">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">nexus_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_20 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.nexus_1)</data>
                      <graph id="116::" edgedefault="directed">
                        <node id="116::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="115">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_3</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_19 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.broadcast_3)</data>
                      <graph id="115::" edgedefault="directed">
                        <node id="115::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="113">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_2</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_17 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.broadcast_2)</data>
                      <graph id="113::" edgedefault="directed">
                        <node id="113::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="112">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_16 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.broadcast_1)</data>
                      <graph id="112::" edgedefault="directed">
                        <node id="112::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="111">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_15 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.broadcast)</data>
                      <graph id="111::" edgedefault="directed">
                        <node id="111::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="110">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">IntXbar_2 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.intXbar)</data>
                      <graph id="110::" edgedefault="directed">
                        <node id="110::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">Interrupt Node
, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="108">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tlMasterXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_10 (RiscVSystem.target.tile_prci_domain_1.tile_reset_domain.meowv64_tile.tlMasterXbar)</data>
                      <graph id="108::" edgedefault="directed">
                        <node id="108::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="78">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_prci_domain</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">TilePRCIDomain (RiscVSystem.target.tile_prci_domain)</data>
          <graph id="78::" edgedefault="directed">
            <node id="78::12">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="78::11">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="78::10">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="78::7">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="78::6">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="78::5">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="78::3">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="78::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="288">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tracecore</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_14 (RiscVSystem.target.tile_prci_domain.tracecore)</data>
              <graph id="288::" edgedefault="directed">
                <node id="288::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="287">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">trace</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">BundleBridgeNexus_13 (RiscVSystem.target.tile_prci_domain.trace)</data>
              <graph id="287::" edgedefault="directed">
                <node id="287::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="286">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_3 (RiscVSystem.target.tile_prci_domain.intsource_3)</data>
              <graph id="286::" edgedefault="directed">
                <node id="286::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="284">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_2 (RiscVSystem.target.tile_prci_domain.intsource_2)</data>
              <graph id="284::" edgedefault="directed">
                <node id="284::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="282">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncCrossingSource_1 (RiscVSystem.target.tile_prci_domain.intsource_1)</data>
              <graph id="282::" edgedefault="directed">
                <node id="282::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                </node>
              </graph>
            </node>
            <node id="277">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_2 (RiscVSystem.target.tile_prci_domain.intsink_3)</data>
              <graph id="277::" edgedefault="directed">
                <node id="277::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="275">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_1 (RiscVSystem.target.tile_prci_domain.intsink_2)</data>
              <graph id="275::" edgedefault="directed">
                <node id="275::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="273">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink (RiscVSystem.target.tile_prci_domain.intsink_1)</data>
              <graph id="273::" edgedefault="directed">
                <node id="273::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="272">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncAsyncCrossingSink_1 (RiscVSystem.target.tile_prci_domain.intsink)</data>
              <graph id="272::" edgedefault="directed">
                <node id="272::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:3</data>
                </node>
              </graph>
            </node>
            <node id="267">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLBuffer_16 (RiscVSystem.target.tile_prci_domain.buffer_1)</data>
              <graph id="267::" edgedefault="directed">
                <node id="267::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="266">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLBuffer_15 (RiscVSystem.target.tile_prci_domain.buffer)</data>
              <graph id="266::" edgedefault="directed">
                <node id="266::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="80">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_6 (RiscVSystem.target.tile_prci_domain.clockNode)</data>
              <graph id="80::" edgedefault="directed">
                <node id="80::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="79">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tile_reset_domain</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TileResetDomain (RiscVSystem.target.tile_prci_domain.tile_reset_domain)</data>
              <graph id="79::" edgedefault="directed">
                <node id="79::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="81">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">meowv64_tile</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">MeowV64Tile (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile)</data>
                  <graph id="81::" edgedefault="directed">
                    <node id="81::22">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::21">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::18">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="81::17">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="81::16">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="81::15">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="81::14">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                    <node id="81::12">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::10">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::9">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::8">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::6">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::5">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::4">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::3">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::2">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::1">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="81::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="103">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_18 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.widget_3)</data>
                      <graph id="103::" edgedefault="directed">
                        <node id="103::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="102">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_3</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_14 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.buffer_3)</data>
                      <graph id="102::" edgedefault="directed">
                        <node id="102::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="101">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_9 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.xbar)</data>
                      <graph id="101::" edgedefault="directed">
                        <node id="101::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="100">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_17 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.widget_2)</data>
                      <graph id="100::" edgedefault="directed">
                        <node id="100::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="99">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_13 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.buffer_2)</data>
                      <graph id="99::" edgedefault="directed">
                        <node id="99::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="98">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_16 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.widget_1)</data>
                      <graph id="98::" edgedefault="directed">
                        <node id="98::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="97">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_12 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.buffer_1)</data>
                      <graph id="97::" edgedefault="directed">
                        <node id="97::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="96">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLWidthWidget_15 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.widget)</data>
                      <graph id="96::" edgedefault="directed">
                        <node id="96::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="95">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLBuffer_11 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.buffer)</data>
                      <graph id="95::" edgedefault="directed">
                        <node id="95::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                        </node>
                      </graph>
                    </node>
                    <node id="94">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">addrGen</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">AddressGeneration (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.addrGen)</data>
                      <graph id="94::" edgedefault="directed">
                        <node id="94::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="94::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="93">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffets</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">Buffets (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.buffets)</data>
                      <graph id="93::" edgedefault="directed">
                        <node id="93::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                        <node id="93::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="92">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">adapter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">MeowV64TileLinkAdapter (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.adapter)</data>
                      <graph id="92::" edgedefault="directed">
                        <node id="92::3">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="92::2">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 0

Slave Name = buffets
Slave Address = List(AddressSet(0x5000000, 0x3ff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = buffets
Slave Address = List(AddressSet(0x58000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = addrGen
Slave Address = List(AddressSet(0x59000000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="92::1">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                        <node id="92::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 32
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="91">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_4</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_12 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.broadcast_4)</data>
                      <graph id="91::" edgedefault="directed">
                        <node id="91::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="90">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">nexus_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_11 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.nexus_1)</data>
                      <graph id="90::" edgedefault="directed">
                        <node id="90::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="89">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_3</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_10 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.broadcast_3)</data>
                      <graph id="89::" edgedefault="directed">
                        <node id="89::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="87">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_2</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_8 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.broadcast_2)</data>
                      <graph id="87::" edgedefault="directed">
                        <node id="87::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="86">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_7 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.broadcast_1)</data>
                      <graph id="86::" edgedefault="directed">
                        <node id="86::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="85">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">broadcast</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                      <data key="d">BundleBridgeNexus_6 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.broadcast)</data>
                      <graph id="85::" edgedefault="directed">
                        <node id="85::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="84">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">IntXbar_1 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.intXbar)</data>
                      <graph id="84::" edgedefault="directed">
                        <node id="84::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">Interrupt Node
, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="82">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tlMasterXbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                      <data key="d">TLXbar_7 (RiscVSystem.target.tile_prci_domain.tile_reset_domain.meowv64_tile.tlMasterXbar)</data>
                      <graph id="82::" edgedefault="directed">
                        <node id="82::0">
                          <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                        </node>
                      </graph>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="49">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_l2_wrapper</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">CoherenceManagerWrapper (RiscVSystem.target.subsystem_l2_wrapper)</data>
          <graph id="49::" edgedefault="directed">
            <node id="49::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="75">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_bus_named_subsystem_mbus</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_25 (RiscVSystem.target.subsystem_l2_wrapper.coupler_to_bus_named_subsystem_mbus)</data>
              <graph id="75::" edgedefault="directed">
                <node id="75::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="77">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_14 (RiscVSystem.target.subsystem_l2_wrapper.coupler_to_bus_named_subsystem_mbus.widget)</data>
                  <graph id="77::" edgedefault="directed">
                    <node id="77::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="63">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">binder</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">BankBinder (RiscVSystem.target.subsystem_l2_wrapper.binder)</data>
              <graph id="63::" edgedefault="directed">
                <node id="63::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,40)


Slave Port Beatbytes = 16
Slave Port MinLatency = 1

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,40)


Slave Port Beatbytes = 16
Slave Port MinLatency = 1

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="62">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coherent_jbar</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLJbar (RiscVSystem.target.subsystem_l2_wrapper.coherent_jbar)</data>
              <graph id="62::" edgedefault="directed">
                <node id="62::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="58">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">cork</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLCacheCork (RiscVSystem.target.subsystem_l2_wrapper.cork)</data>
              <graph id="58::" edgedefault="directed">
                <node id="58::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,40)


Slave Port Beatbytes = 16
Slave Port MinLatency = 1

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,20)


Slave Port Beatbytes = 16
Slave Port MinLatency = 1

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[1, 32]
acquireB = TransferSizes[1, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="57">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">InclusiveCache_outer_TLBuffer</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLBuffer_10 (RiscVSystem.target.subsystem_l2_wrapper.InclusiveCache_outer_TLBuffer)</data>
              <graph id="57::" edgedefault="directed">
                <node id="57::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="56">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">InclusiveCache_inner_TLBuffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLBuffer_9 (RiscVSystem.target.subsystem_l2_wrapper.InclusiveCache_inner_TLBuffer)</data>
              <graph id="56::" edgedefault="directed">
                <node id="56::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



, 
a:BufferParams:1F, b:BufferParams:0, c:BufferParams:0, d:BufferParams:1F, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="55">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">filter</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLFilter (RiscVSystem.target.subsystem_l2_wrapper.filter)</data>
              <graph id="55::" edgedefault="directed">
                <node id="55::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="54">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">l2</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">InclusiveCache (RiscVSystem.target.subsystem_l2_wrapper.l2)</data>
              <graph id="54::" edgedefault="directed">
                <node id="54::1">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">
---------------------------------------------

On Input Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 1

Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
                <node id="54::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,20)


Slave Port Beatbytes = 16
Slave Port MinLatency = 1

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[1, 32]
acquireB = TransferSizes[1, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="52">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_5 (RiscVSystem.target.subsystem_l2_wrapper.fixedClockNode)</data>
              <graph id="52::" edgedefault="directed">
                <node id="52::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="51">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroup_5 (RiscVSystem.target.subsystem_l2_wrapper.clockGroup)</data>
              <graph id="51::" edgedefault="directed">
                <node id="51::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="50">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_l2_clock_groups</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_5 (RiscVSystem.target.subsystem_l2_wrapper.subsystem_l2_clock_groups)</data>
              <graph id="50::" edgedefault="directed">
                <node id="50::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="41">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_mbus</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">MemoryBus (RiscVSystem.target.subsystem_mbus)</data>
          <graph id="41::" edgedefault="directed">
            <node id="41::1">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="41::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="411">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_memory_controller_port_named_axi4</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_24 (RiscVSystem.target.subsystem_mbus.coupler_to_memory_controller_port_named_axi4)</data>
              <graph id="411::" edgedefault="directed">
                <node id="411::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="415">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_13 (RiscVSystem.target.subsystem_mbus.coupler_to_memory_controller_port_named_axi4.widget)</data>
                  <graph id="415::" edgedefault="directed">
                    <node id="415::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="414">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tl2axi4</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLToAXI4_1 (RiscVSystem.target.subsystem_mbus.coupler_to_memory_controller_port_named_axi4.tl2axi4)</data>
                  <graph id="414::" edgedefault="directed">
                    <node id="414::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="413">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4index</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4IdIndexer_2 (RiscVSystem.target.subsystem_mbus.coupler_to_memory_controller_port_named_axi4.axi4index)</data>
                  <graph id="413::" edgedefault="directed">
                    <node id="413::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="412">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4yank</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4UserYanker_2 (RiscVSystem.target.subsystem_mbus.coupler_to_memory_controller_port_named_axi4.axi4yank)</data>
                  <graph id="412::" edgedefault="directed">
                    <node id="412::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="76">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLBuffer_8 (RiscVSystem.target.subsystem_mbus.buffer)</data>
              <graph id="76::" edgedefault="directed">
                <node id="76::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="48">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">picker</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">ProbePicker (RiscVSystem.target.subsystem_mbus.picker)</data>
              <graph id="48::" edgedefault="directed">
                <node id="48::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,40)


Slave Port Beatbytes = 16
Slave Port MinLatency = 1

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,40)


Slave Port Beatbytes = 16
Slave Port MinLatency = 1

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="47">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLFIFOFixer_4 (RiscVSystem.target.subsystem_mbus.fixer)</data>
              <graph id="47::" edgedefault="directed">
                <node id="47::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,40)


Slave Port Beatbytes = 16
Slave Port MinLatency = 1

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,40)


Slave Port Beatbytes = 16
Slave Port MinLatency = 1

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="46">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_mbus_xbar</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLXbar_6 (RiscVSystem.target.subsystem_mbus.subsystem_mbus_xbar)</data>
              <graph id="46::" edgedefault="directed">
                <node id="46::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="44">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_4 (RiscVSystem.target.subsystem_mbus.fixedClockNode)</data>
              <graph id="44::" edgedefault="directed">
                <node id="44::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="43">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroup_4 (RiscVSystem.target.subsystem_mbus.clockGroup)</data>
              <graph id="43::" edgedefault="directed">
                <node id="43::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="42">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_mbus_clock_groups</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_4 (RiscVSystem.target.subsystem_mbus.subsystem_mbus_clock_groups)</data>
              <graph id="42::" edgedefault="directed">
                <node id="42::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="28">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_cbus</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">PeripheryBus_1 (RiscVSystem.target.subsystem_cbus)</data>
          <graph id="28::" edgedefault="directed">
            <node id="28::1">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="28::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="433">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_bootrom</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_23 (RiscVSystem.target.subsystem_cbus.coupler_to_bootrom)</data>
              <graph id="433::" edgedefault="directed">
                <node id="433::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="434">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLFragmenter_4 (RiscVSystem.target.subsystem_cbus.coupler_to_bootrom.fragmenter)</data>
                  <graph id="434::" edgedefault="directed">
                    <node id="434::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="256">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_debug</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_16 (RiscVSystem.target.subsystem_cbus.coupler_to_debug)</data>
              <graph id="256::" edgedefault="directed">
                <node id="256::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="257">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLFragmenter_3 (RiscVSystem.target.subsystem_cbus.coupler_to_debug.fragmenter)</data>
                  <graph id="257::" edgedefault="directed">
                    <node id="257::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="239">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_clint</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_15 (RiscVSystem.target.subsystem_cbus.coupler_to_clint)</data>
              <graph id="239::" edgedefault="directed">
                <node id="239::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="240">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLFragmenter_2 (RiscVSystem.target.subsystem_cbus.coupler_to_clint.fragmenter)</data>
                  <graph id="240::" edgedefault="directed">
                    <node id="240::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="236">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_plic</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_14 (RiscVSystem.target.subsystem_cbus.coupler_to_plic)</data>
              <graph id="236::" edgedefault="directed">
                <node id="236::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="237">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLFragmenter_1 (RiscVSystem.target.subsystem_cbus.coupler_to_plic.fragmenter)</data>
                  <graph id="237::" edgedefault="directed">
                    <node id="237::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 1

Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 1

Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="65">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLBuffer_7 (RiscVSystem.target.subsystem_cbus.buffer_1)</data>
              <graph id="65::" edgedefault="directed">
                <node id="65::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="59">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_l2_ctrl</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_12 (RiscVSystem.target.subsystem_cbus.coupler_to_l2_ctrl)</data>
              <graph id="59::" edgedefault="directed">
                <node id="59::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="61">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLFragmenter (RiscVSystem.target.subsystem_cbus.coupler_to_l2_ctrl.fragmenter)</data>
                  <graph id="61::" edgedefault="directed">
                    <node id="61::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 3

Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 3

Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="60">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLBuffer_6 (RiscVSystem.target.subsystem_cbus.coupler_to_l2_ctrl.buffer)</data>
                  <graph id="60::" edgedefault="directed">
                    <node id="60::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 1

Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,984)


Slave Port Beatbytes = 8
Slave Port MinLatency = 3

Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[1, 8]
hint = TransferSizes[0, 0]



, 
a:BufferParams:1, b:BufferParams:1, c:BufferParams:1, d:BufferParams:1, e:BufferParams:1</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="38">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">wrapped_error_device</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">ErrorDeviceWrapper (RiscVSystem.target.subsystem_cbus.wrapped_error_device)</data>
              <graph id="38::" edgedefault="directed">
                <node id="40">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLBuffer_5 (RiscVSystem.target.subsystem_cbus.wrapped_error_device.buffer)</data>
                  <graph id="40::" edgedefault="directed">
                    <node id="40::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 1

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 3

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                    </node>
                  </graph>
                </node>
                <node id="39">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">error</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLError (RiscVSystem.target.subsystem_cbus.wrapped_error_device.error)</data>
                  <graph id="39::" edgedefault="directed">
                    <node id="39::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">
---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 1

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="37">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">atomics</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLAtomicAutomata_1 (RiscVSystem.target.subsystem_cbus.atomics)</data>
              <graph id="37::" edgedefault="directed">
                <node id="37::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="36">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLBuffer_4 (RiscVSystem.target.subsystem_cbus.buffer)</data>
              <graph id="36::" edgedefault="directed">
                <node id="36::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="35">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">out_xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLXbar_5 (RiscVSystem.target.subsystem_cbus.out_xbar)</data>
              <graph id="35::" edgedefault="directed">
                <node id="35::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 3

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 3

Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 1

Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="34">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">in_xbar</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLXbar_4 (RiscVSystem.target.subsystem_cbus.in_xbar)</data>
              <graph id="34::" edgedefault="directed">
                <node id="34::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="33">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLFIFOFixer_3 (RiscVSystem.target.subsystem_cbus.fixer)</data>
              <graph id="33::" edgedefault="directed">
                <node id="33::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 0

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="31">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_3 (RiscVSystem.target.subsystem_cbus.fixedClockNode)</data>
              <graph id="31::" edgedefault="directed">
                <node id="31::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="30">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroup_3 (RiscVSystem.target.subsystem_cbus.clockGroup)</data>
              <graph id="30::" edgedefault="directed">
                <node id="30::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="29">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_cbus_clock_groups</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_3 (RiscVSystem.target.subsystem_cbus.subsystem_cbus_clock_groups)</data>
              <graph id="29::" edgedefault="directed">
                <node id="29::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="22">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_fbus</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">FrontBus (RiscVSystem.target.subsystem_fbus)</data>
          <graph id="22::" edgedefault="directed">
            <node id="22::1">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="22::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="423">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_port_named_slave_port_axi4</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_11 (RiscVSystem.target.subsystem_fbus.coupler_from_port_named_slave_port_axi4)</data>
              <graph id="423::" edgedefault="directed">
                <node id="423::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="430">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4index</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4IdIndexer_1 (RiscVSystem.target.subsystem_fbus.coupler_from_port_named_slave_port_axi4.axi4index)</data>
                  <graph id="430::" edgedefault="directed">
                    <node id="430::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="429">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4frag</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4Fragmenter (RiscVSystem.target.subsystem_fbus.coupler_from_port_named_slave_port_axi4.axi4frag)</data>
                  <graph id="429::" edgedefault="directed">
                    <node id="429::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="428">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4yank</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4UserYanker_1 (RiscVSystem.target.subsystem_fbus.coupler_from_port_named_slave_port_axi4.axi4yank)</data>
                  <graph id="428::" edgedefault="directed">
                    <node id="428::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="427">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi42tl</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4ToTL (RiscVSystem.target.subsystem_fbus.coupler_from_port_named_slave_port_axi4.axi42tl)</data>
                  <graph id="427::" edgedefault="directed">
                    <node id="427::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="426">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_5 (RiscVSystem.target.subsystem_fbus.coupler_from_port_named_slave_port_axi4.widget)</data>
                  <graph id="426::" edgedefault="directed">
                    <node id="426::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="425">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLFIFOFixer_2 (RiscVSystem.target.subsystem_fbus.coupler_from_port_named_slave_port_axi4.fixer)</data>
                  <graph id="425::" edgedefault="directed">
                    <node id="425::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 8
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 8
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="424">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLBuffer_3 (RiscVSystem.target.subsystem_fbus.coupler_from_port_named_slave_port_axi4.buffer)</data>
                  <graph id="424::" edgedefault="directed">
                    <node id="424::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 8
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 8
Slave Port MinLatency = 6

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="258">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_debug_sb</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_10 (RiscVSystem.target.subsystem_fbus.coupler_from_debug_sb)</data>
              <graph id="258::" edgedefault="directed">
                <node id="258::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="259">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_4 (RiscVSystem.target.subsystem_fbus.coupler_from_debug_sb.widget)</data>
                  <graph id="259::" edgedefault="directed">
                    <node id="259::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 8
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 1
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="72">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLBuffer_2 (RiscVSystem.target.subsystem_fbus.buffer)</data>
              <graph id="72::" edgedefault="directed">
                <node id="72::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 8
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 8
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="27">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_fbus_xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLXbar_3 (RiscVSystem.target.subsystem_fbus.subsystem_fbus_xbar)</data>
              <graph id="27::" edgedefault="directed">
                <node id="27::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 8
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,1)


Slave Port Beatbytes = 8
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 8
Slave Port MinLatency = 4

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="25">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_2 (RiscVSystem.target.subsystem_fbus.fixedClockNode)</data>
              <graph id="25::" edgedefault="directed">
                <node id="25::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="24">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroup_2 (RiscVSystem.target.subsystem_fbus.clockGroup)</data>
              <graph id="24::" edgedefault="directed">
                <node id="24::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="23">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_fbus_clock_groups</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_2 (RiscVSystem.target.subsystem_fbus.subsystem_fbus_clock_groups)</data>
              <graph id="23::" edgedefault="directed">
                <node id="23::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="12">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_pbus</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">PeripheryBus (RiscVSystem.target.subsystem_pbus)</data>
          <graph id="12::" edgedefault="directed">
            <node id="12::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="15">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_1 (RiscVSystem.target.subsystem_pbus.fixedClockNode)</data>
              <graph id="15::" edgedefault="directed">
                <node id="15::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="14">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroup_1 (RiscVSystem.target.subsystem_pbus.clockGroup)</data>
              <graph id="14::" edgedefault="directed">
                <node id="14::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="13">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_pbus_clock_groups</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_1 (RiscVSystem.target.subsystem_pbus.subsystem_pbus_clock_groups)</data>
              <graph id="13::" edgedefault="directed">
                <node id="13::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="5">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_sbus</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">SystemBus (RiscVSystem.target.subsystem_sbus)</data>
          <graph id="5::" edgedefault="directed">
            <node id="5::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="416">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_port_named_mmio_port_axi4</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_9 (RiscVSystem.target.subsystem_sbus.coupler_to_port_named_mmio_port_axi4)</data>
              <graph id="416::" edgedefault="directed">
                <node id="416::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="422">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_3 (RiscVSystem.target.subsystem_sbus.coupler_to_port_named_mmio_port_axi4.widget)</data>
                  <graph id="422::" edgedefault="directed">
                    <node id="422::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 3

Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 16
Slave Port MinLatency = 3

Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="421">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tl2axi4</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLToAXI4 (RiscVSystem.target.subsystem_sbus.coupler_to_port_named_mmio_port_axi4.tl2axi4)</data>
                  <graph id="421::" edgedefault="directed">
                    <node id="421::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="420">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4index</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4IdIndexer (RiscVSystem.target.subsystem_sbus.coupler_to_port_named_mmio_port_axi4.axi4index)</data>
                  <graph id="420::" edgedefault="directed">
                    <node id="420::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="419">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4deint</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4Deinterleaver (RiscVSystem.target.subsystem_sbus.coupler_to_port_named_mmio_port_axi4.axi4deint)</data>
                  <graph id="419::" edgedefault="directed">
                    <node id="419::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="418">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4yank</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4UserYanker (RiscVSystem.target.subsystem_sbus.coupler_to_port_named_mmio_port_axi4.axi4yank)</data>
                  <graph id="418::" edgedefault="directed">
                    <node id="418::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="417">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4buf</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">AXI4Buffer (RiscVSystem.target.subsystem_sbus.coupler_to_port_named_mmio_port_axi4.axi4buf)</data>
                  <graph id="417::" edgedefault="directed">
                    <node id="417::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="385">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_meowv64_tile_5</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_8 (RiscVSystem.target.subsystem_sbus.coupler_from_meowv64_tile_5)</data>
              <graph id="385::" edgedefault="directed">
                <node id="385::3">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="385::1">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="385::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="361">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_meowv64_tile_4</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_7 (RiscVSystem.target.subsystem_sbus.coupler_from_meowv64_tile_4)</data>
              <graph id="361::" edgedefault="directed">
                <node id="361::3">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="361::1">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="361::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="337">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_meowv64_tile_3</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_6 (RiscVSystem.target.subsystem_sbus.coupler_from_meowv64_tile_3)</data>
              <graph id="337::" edgedefault="directed">
                <node id="337::3">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="337::1">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="337::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="313">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_meowv64_tile_2</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_5 (RiscVSystem.target.subsystem_sbus.coupler_from_meowv64_tile_2)</data>
              <graph id="313::" edgedefault="directed">
                <node id="313::3">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="313::1">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="313::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="289">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_meowv64_tile_1</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_4 (RiscVSystem.target.subsystem_sbus.coupler_from_meowv64_tile_1)</data>
              <graph id="289::" edgedefault="directed">
                <node id="289::3">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="289::1">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="289::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="265">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_meowv64_tile</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_3 (RiscVSystem.target.subsystem_sbus.coupler_from_meowv64_tile)</data>
              <graph id="265::" edgedefault="directed">
                <node id="265::3">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="265::1">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="265::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="73">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_bus_named_subsystem_l2</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_2 (RiscVSystem.target.subsystem_sbus.coupler_to_bus_named_subsystem_l2)</data>
              <graph id="73::" edgedefault="directed">
                <node id="74">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_2 (RiscVSystem.target.subsystem_sbus.coupler_to_bus_named_subsystem_l2.widget)</data>
                  <graph id="74::" edgedefault="directed">
                    <node id="74::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="70">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_bus_named_subsystem_fbus</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler_1 (RiscVSystem.target.subsystem_sbus.coupler_from_bus_named_subsystem_fbus)</data>
              <graph id="70::" edgedefault="directed">
                <node id="70::1">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="71">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_1 (RiscVSystem.target.subsystem_sbus.coupler_from_bus_named_subsystem_fbus.widget)</data>
                  <graph id="71::" edgedefault="directed">
                    <node id="71::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 8
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="64">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_bus_named_subsystem_cbus</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLInterconnectCoupler (RiscVSystem.target.subsystem_sbus.coupler_to_bus_named_subsystem_cbus)</data>
              <graph id="64::" edgedefault="directed">
                <node id="64::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="66">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
                  <data key="d">TLWidthWidget (RiscVSystem.target.subsystem_sbus.coupler_to_bus_named_subsystem_cbus.widget)</data>
                  <graph id="66::" edgedefault="directed">
                    <node id="66::0">
                      <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 8
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="11">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixer</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLFIFOFixer (RiscVSystem.target.subsystem_sbus.fixer)</data>
              <graph id="11::" edgedefault="directed">
                <node id="11::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="10">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">system_bus_xbar</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">TLXbar (RiscVSystem.target.subsystem_sbus.system_bus_xbar)</data>
              <graph id="10::" edgedefault="directed">
                <node id="10::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



On Output Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(122,123)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(121,122)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(120,121)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(116,117)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(112,116)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(106,107)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(105,106)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(104,105)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(100,101)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(96,100)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(90,91)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(89,90)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(88,89)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(84,85)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(80,84)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(74,75)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(73,74)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(72,73)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(68,69)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(64,68)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(58,59)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(57,58)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(56,57)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(52,53)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(48,52)

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(42,43)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(41,42)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(40,41)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(36,37)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(32,36)


Slave Port Beatbytes = 16
Slave Port MinLatency = 3

Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]




---------------------------------------------

On Input Edge:

Master Name = debug
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(16,17)

Master Name = slave-port-axi4 ID#0
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(0,8)

Master Name = slave-port-axi4 ID#1
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[1, 4096]
acquireB = TransferSizes[1, 4096]
arithmetic = TransferSizes[1, 4096]
logical = TransferSizes[1, 4096]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]


sourceId = IdRange(8,16)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



On Input Edge:

Master Name = meowv64-ic
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(10,11)

Master Name = meowv64-dc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[32, 32]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(9,10)

Master Name = meowv64-ui
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[32, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(8,9)

Master Name = meowv64-uc
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 8]
putFull = TransferSizes[1, 8]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(4,5)

Master Name = meowv64-addrgen
visibility = List(AddressSet(0x0, ~0x0))
emits = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]


sourceId = IdRange(0,4)


Slave Port Beatbytes = 16
Slave Port MinLatency = 2

Slave Name = error
Slave Address = List(AddressSet(0x3000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 4096]
putFull = TransferSizes[1, 4096]
putPartial = TransferSizes[1, 4096]
hint = TransferSizes[1, 4096]



Slave Name = l2
Slave Address = List(AddressSet(0x2010000, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = plic
Slave Address = List(AddressSet(0xc000000, 0x3ffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = clint
Slave Address = List(AddressSet(0x2000000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = dmInner
Slave Address = List(AddressSet(0x0, 0xfff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[1, 8]
logical = TransferSizes[1, 8]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[0, 0]



Slave Name = bootrom
Slave Address = List(AddressSet(0x10000, 0xffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[0, 0]
putPartial = TransferSizes[0, 0]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x80000000, 0x7fffffff), AddressSet(0x100000000, 0xffffffff))
supports = acquireT = TransferSizes[32, 32]
acquireB = TransferSizes[32, 32]
arithmetic = TransferSizes[1, 16]
logical = TransferSizes[1, 16]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 32]
putPartial = TransferSizes[1, 32]
hint = TransferSizes[1, 32]



Slave Name = target
Slave Address = List(AddressSet(0x60000000, 0x1fffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



Slave Name = target
Slave Address = List(AddressSet(0x200000000, 0xffffffff))
supports = acquireT = TransferSizes[0, 0]
acquireB = TransferSizes[0, 0]
arithmetic = TransferSizes[0, 0]
logical = TransferSizes[0, 0]
get = TransferSizes[1, 32]
putFull = TransferSizes[1, 256]
putPartial = TransferSizes[1, 256]
hint = TransferSizes[0, 0]



, 
</data>
                </node>
              </graph>
            </node>
            <node id="8">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast (RiscVSystem.target.subsystem_sbus.fixedClockNode)</data>
              <graph id="8::" edgedefault="directed">
                <node id="8::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="7">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroup (RiscVSystem.target.subsystem_sbus.clockGroup)</data>
              <graph id="7::" edgedefault="directed">
                <node id="7::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="6">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_sbus_clock_groups</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator (RiscVSystem.target.subsystem_sbus.subsystem_sbus_clock_groups)</data>
              <graph id="6::" edgedefault="directed">
                <node id="6::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="4">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dummyClockGroupSourceNode</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
          <data key="d">SimpleClockGroupSource (RiscVSystem.target.dummyClockGroupSourceNode)</data>
          <graph id="4::" edgedefault="directed">
            <node id="4::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
          </graph>
        </node>
        <node id="2">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">ibus</y:NodeLabel><y:BorderStyle type="dotted"/></y:ShapeNode></data>
          <data key="d">InterruptBusWrapper (RiscVSystem.target.ibus)</data>
          <graph id="2::" edgedefault="directed">
            <node id="2::1">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="true"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="2::0">
              <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="409">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntSyncAsyncCrossingSink (RiscVSystem.target.ibus.intsink)</data>
              <graph id="409::" edgedefault="directed">
                <node id="409::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:3</data>
                </node>
              </graph>
            </node>
            <node id="3">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">int_bus</y:NodeLabel><y:BorderStyle type="line"/></y:ShapeNode></data>
              <data key="d">IntXbar (RiscVSystem.target.ibus.int_bus)</data>
              <graph id="3::" edgedefault="directed">
                <node id="3::0">
                  <data key="n"><y:ShapeNode><y:Shape type="ellipse"/><y:Fill color="#FFCC00" transparent="false"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
      </graph>
    </node>
    <edge source="1::62" target="264::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="1::61" target="430::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::58" source="410::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::57" source="2::1"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::56" source="1::58"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::55" source="405::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::54" source="403::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::53" source="401::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::51" source="208::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::50" source="208::6"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::49" source="208::5"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::48" source="381::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::47" source="379::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::46" source="377::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::44" source="182::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::43" source="182::6"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::42" source="182::5"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::41" source="357::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::40" source="355::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::39" source="353::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::37" source="156::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::36" source="156::6"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::35" source="156::5"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::34" source="333::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::33" source="331::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::32" source="329::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::30" source="130::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::29" source="130::6"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::28" source="130::5"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::27" source="309::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::26" source="307::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::25" source="305::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::23" source="104::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::22" source="104::6"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::21" source="104::5"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::20" source="285::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::19" source="283::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::18" source="281::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::16" source="78::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::15" source="78::6"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::14" source="78::5"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="1::8" target="211::6"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="1::7" target="185::6"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="1::6" target="159::6"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="1::5" target="133::6"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="1::4" target="107::6"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="1::3" target="81::6"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="410::0" source="1::57"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="405::0" source="262::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="403::0" source="261::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="401::0" source="260::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="398::0" source="1::51"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="396::0" source="1::50"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="394::0" source="1::49"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="381::0" source="262::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="379::0" source="261::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="377::0" source="260::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="374::0" source="1::44"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="372::0" source="1::43"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="370::0" source="1::42"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="357::0" source="262::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="355::0" source="261::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="353::0" source="260::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="350::0" source="1::37"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="348::0" source="1::36"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="346::0" source="1::35"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="333::0" source="262::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="331::0" source="261::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="329::0" source="260::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="326::0" source="1::30"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="324::0" source="1::29"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="322::0" source="1::28"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="309::0" source="262::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="307::0" source="261::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="305::0" source="260::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="302::0" source="1::23"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="300::0" source="1::22"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="298::0" source="1::21"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="285::0" source="262::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="283::0" source="261::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="281::0" source="260::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="278::0" source="1::16"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="276::0" source="1::15"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="274::0" source="1::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="264::0" target="81::4"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="264::0" target="107::4"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="264::0" target="133::4"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="264::0" target="159::4"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="264::0" target="185::4"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="264::0" target="211::4"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="263::0" target="81::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="263::0" target="107::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="263::0" target="133::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="263::0" target="159::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="263::0" target="185::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="263::0" target="211::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="262::0" source="1::11"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">6</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="261::0" source="1::10"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">6</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="260::0" source="1::9"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">6</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="255::0" target="253::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="254::0" target="259::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">8</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="251::0" target="255::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#ff0000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="248::1" target="251::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="248::0" target="249::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="249::0" target="250::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="249::0" target="248::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="247::0" source="272::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="247::0" source="296::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="247::0" source="320::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="247::0" source="344::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="247::0" source="368::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="247::0" source="392::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="246::0" source="247::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="246::0" source="247::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="246::0" source="247::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="246::0" source="247::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="246::0" source="247::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="246::0" source="247::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="245::0" target="244::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="244::0" target="248::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="244::0" target="246::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="241::0" target="253::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#20B2AA" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="238::1" source="274::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="238::1" source="298::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="238::1" source="322::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="238::1" source="346::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="238::1" source="370::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="238::1" source="394::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="276::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="278::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="300::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="302::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="324::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="326::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="348::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="350::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="372::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="374::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="396::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="235::1" source="398::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="208::12" source="1::55"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="208::11" source="1::54"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="208::10" source="1::53"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="208::7" source="397::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="208::6" source="395::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="208::5" source="393::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="208::3" target="385::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="208::0" target="210::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="406::0" source="208::12"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="404::0" source="208::11"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="402::0" source="208::10"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="397::0" source="211::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="395::0" source="211::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="393::0" source="211::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="392::0" source="211::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="387::0" target="208::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="386::0" target="387::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="210::0" target="209::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::22" target="1::63"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::21" target="212::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::21" target="212::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::21" target="212::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::21" target="212::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="211::18" source="404::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="211::17" source="406::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="211::16" source="402::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="211::14" source="214::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="211::14" source="214::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="211::14" source="214::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="211::14" source="214::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::12" target="221::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::9" target="408::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::8" target="219::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::6" target="217::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::4" target="216::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::2" target="215::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="211::0" target="386::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="233::0" target="232::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="232::0" target="211::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="231::0" target="223::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="231::0" target="223::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="231::0" target="224::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="231::0" target="233::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="230::0" target="229::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="229::0" target="211::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="228::0" target="227::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="227::0" target="211::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="226::0" target="225::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="225::0" target="211::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="224::1" target="231::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="222::3" target="230::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="222::2" target="231::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="222::1" target="226::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="222::0" target="228::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="220::0" target="211::10"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="219::0" target="407::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="217::0" target="211::5"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="216::0" target="211::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="215::0" target="211::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="214::0" source="211::15"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">5</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="212::0" target="211::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="182::12" source="1::48"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="182::11" source="1::47"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="182::10" source="1::46"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="182::7" source="373::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="182::6" source="371::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="182::5" source="369::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="182::3" target="361::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="182::0" target="184::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="382::0" source="182::12"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="380::0" source="182::11"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="378::0" source="182::10"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="373::0" source="185::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="371::0" source="185::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="369::0" source="185::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="368::0" source="185::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="363::0" target="182::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="362::0" target="363::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="184::0" target="183::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::22" target="1::63"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::21" target="186::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::21" target="186::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::21" target="186::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::21" target="186::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="185::18" source="380::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="185::17" source="382::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="185::16" source="378::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="185::14" source="188::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="185::14" source="188::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="185::14" source="188::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="185::14" source="188::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::12" target="195::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::9" target="384::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::8" target="193::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::6" target="191::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::4" target="190::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::2" target="189::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="185::0" target="362::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="207::0" target="206::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="206::0" target="185::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="205::0" target="197::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="205::0" target="197::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="205::0" target="198::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="205::0" target="207::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="204::0" target="203::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="203::0" target="185::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="202::0" target="201::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="201::0" target="185::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="200::0" target="199::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="199::0" target="185::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="198::1" target="205::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="196::3" target="204::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="196::2" target="205::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="196::1" target="200::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="196::0" target="202::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="194::0" target="185::10"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="193::0" target="383::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="191::0" target="185::5"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="190::0" target="185::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="189::0" target="185::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="188::0" source="185::15"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">5</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="186::0" target="185::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="156::12" source="1::41"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="156::11" source="1::40"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="156::10" source="1::39"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="156::7" source="349::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="156::6" source="347::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="156::5" source="345::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="156::3" target="337::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="156::0" target="158::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="358::0" source="156::12"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="356::0" source="156::11"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="354::0" source="156::10"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="349::0" source="159::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="347::0" source="159::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="345::0" source="159::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="344::0" source="159::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="339::0" target="156::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="338::0" target="339::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="158::0" target="157::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::22" target="1::63"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::21" target="160::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::21" target="160::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::21" target="160::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::21" target="160::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="159::18" source="356::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="159::17" source="358::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="159::16" source="354::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="159::14" source="162::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="159::14" source="162::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="159::14" source="162::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="159::14" source="162::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::12" target="169::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::9" target="360::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::8" target="167::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::6" target="165::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::4" target="164::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::2" target="163::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="159::0" target="338::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="181::0" target="180::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="180::0" target="159::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="179::0" target="171::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="179::0" target="171::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="179::0" target="172::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="179::0" target="181::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="178::0" target="177::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="177::0" target="159::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="176::0" target="175::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="175::0" target="159::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="174::0" target="173::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="173::0" target="159::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="172::1" target="179::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="170::3" target="178::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="170::2" target="179::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="170::1" target="174::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="170::0" target="176::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="168::0" target="159::10"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="167::0" target="359::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="165::0" target="159::5"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="164::0" target="159::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="163::0" target="159::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="162::0" source="159::15"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">5</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="160::0" target="159::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="130::12" source="1::34"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="130::11" source="1::33"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="130::10" source="1::32"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="130::7" source="325::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="130::6" source="323::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="130::5" source="321::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="130::3" target="313::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="130::0" target="132::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="334::0" source="130::12"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="332::0" source="130::11"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="330::0" source="130::10"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="325::0" source="133::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="323::0" source="133::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="321::0" source="133::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="320::0" source="133::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="315::0" target="130::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="314::0" target="315::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="132::0" target="131::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::22" target="1::63"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::21" target="134::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::21" target="134::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::21" target="134::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::21" target="134::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="133::18" source="332::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="133::17" source="334::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="133::16" source="330::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="133::14" source="136::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="133::14" source="136::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="133::14" source="136::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="133::14" source="136::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::12" target="143::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::9" target="336::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::8" target="141::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::6" target="139::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::4" target="138::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::2" target="137::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::0" target="314::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="155::0" target="154::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="154::0" target="133::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="153::0" target="145::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="153::0" target="145::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="153::0" target="146::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="153::0" target="155::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="152::0" target="151::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="151::0" target="133::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="150::0" target="149::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="149::0" target="133::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="148::0" target="147::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="147::0" target="133::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="146::1" target="153::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="144::3" target="152::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="144::2" target="153::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="144::1" target="148::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="144::0" target="150::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="142::0" target="133::10"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="141::0" target="335::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="139::0" target="133::5"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="138::0" target="133::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="137::0" target="133::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="136::0" source="133::15"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">5</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="134::0" target="133::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="104::12" source="1::27"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="104::11" source="1::26"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="104::10" source="1::25"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="104::7" source="301::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="104::6" source="299::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="104::5" source="297::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="104::3" target="289::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="104::0" target="106::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="310::0" source="104::12"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="308::0" source="104::11"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="306::0" source="104::10"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="301::0" source="107::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="299::0" source="107::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="297::0" source="107::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="296::0" source="107::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="291::0" target="104::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="290::0" target="291::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="106::0" target="105::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::22" target="1::63"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::21" target="108::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::21" target="108::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::21" target="108::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::21" target="108::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="107::18" source="308::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="107::17" source="310::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="107::16" source="306::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="107::14" source="110::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="107::14" source="110::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="107::14" source="110::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="107::14" source="110::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::12" target="117::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::9" target="312::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::8" target="115::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::6" target="113::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::4" target="112::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::2" target="111::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::0" target="290::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="129::0" target="128::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="128::0" target="107::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="127::0" target="119::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="127::0" target="119::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="127::0" target="120::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="127::0" target="129::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="126::0" target="125::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="125::0" target="107::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="124::0" target="123::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="123::0" target="107::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="122::0" target="121::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="121::0" target="107::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="120::1" target="127::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="118::3" target="126::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="118::2" target="127::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="118::1" target="122::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="118::0" target="124::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="116::0" target="107::10"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="115::0" target="311::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="113::0" target="107::5"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="112::0" target="107::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="111::0" target="107::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="110::0" source="107::15"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">5</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="108::0" target="107::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="78::12" source="1::20"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="78::11" source="1::19"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="78::10" source="1::18"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="78::7" source="277::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="78::6" source="275::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="78::5" source="273::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="78::3" target="265::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="78::0" target="80::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="286::0" source="78::12"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="284::0" source="78::11"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="282::0" source="78::10"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="277::0" source="81::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="275::0" source="81::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="273::0" source="81::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="272::0" source="81::14"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="267::0" target="78::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="266::0" target="267::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="80::0" target="79::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::22" target="1::63"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::21" target="82::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::21" target="82::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::21" target="82::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::21" target="82::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="81::18" source="284::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="81::17" source="286::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="81::16" source="282::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="81::14" source="84::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="81::14" source="84::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="81::14" source="84::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="81::14" source="84::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::12" target="91::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::9" target="288::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::8" target="89::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::6" target="87::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::4" target="86::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::2" target="85::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="81::0" target="266::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="103::0" target="102::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="102::0" target="81::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="101::0" target="93::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="101::0" target="93::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="101::0" target="94::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="101::0" target="103::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="100::0" target="99::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="99::0" target="81::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="98::0" target="97::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="97::0" target="81::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="96::0" target="95::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::0" target="81::21"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="94::1" target="101::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="92::3" target="100::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="92::2" target="101::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="92::1" target="96::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="92::0" target="98::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">256</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="90::0" target="81::10"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="89::0" target="287::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="87::0" target="81::5"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="86::0" target="81::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="85::0" target="81::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="84::0" source="81::15"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">5</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="82::0" target="81::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="75::0" target="41::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="77::0" target="75::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="63::0" target="77::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="62::0" target="55::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="58::0" target="63::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="57::0" target="58::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="56::0" target="54::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="55::0" target="56::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="54::0" target="57::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="52::0" target="49::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="51::0" target="52::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="50::0" target="51::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="50::0" target="42::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="41::1" target="76::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="411::0" target="415::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="415::0" target="414::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="414::0" target="413::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="413::0" target="412::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="412::0" target="1::59"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="76::0" target="47::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="48::0" target="411::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="47::0" target="46::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="46::0" target="48::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="44::0" target="41::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="43::0" target="44::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="42::0" target="43::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="28::1" target="65::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="433::0" target="434::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="434::0" target="432::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="256::0" target="257::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="257::0" target="253::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="239::0" target="240::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="240::0" target="238::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="236::0" target="237::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="237::0" target="235::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="65::0" target="34::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="59::0" target="61::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="61::0" target="60::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="60::0" target="54::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="40::0" target="39::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="37::0" target="36::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="36::0" target="33::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="35::0" target="40::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="35::0" target="59::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="35::0" target="236::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="35::0" target="239::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="35::0" target="256::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="35::0" target="433::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="34::0" target="37::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="33::0" target="35::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="31::0" target="28::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="31::0" target="234::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="31::0" target="1::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="31::0" target="431::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="30::0" target="31::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="29::0" target="30::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="29::0" target="13::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="22::1" source="70::1"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="423::0" target="27::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="430::0" target="429::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="429::0" target="428::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="428::0" target="427::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="427::0" target="426::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="426::0" target="425::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="425::0" target="424::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="424::0" target="423::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="258::0" target="27::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="259::0" target="258::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="72::0" source="22::1"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="27::0" source="72::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="25::0" target="22::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="24::0" target="25::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="23::0" target="24::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="15::0" target="12::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="14::0" target="15::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="13::0" target="14::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="416::0" target="422::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="422::0" target="421::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="421::0" target="420::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="420::0" target="419::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="419::0" target="418::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="418::0" target="417::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="417::0" target="1::60"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="385::3" target="385::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="385::1" target="385::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="385::0" target="11::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="361::3" target="361::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="361::1" target="361::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="361::0" target="11::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="337::3" target="337::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="337::1" target="337::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="337::0" target="11::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="313::3" target="313::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="313::1" target="313::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="313::0" target="11::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="289::3" target="289::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="289::1" target="289::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="289::0" target="11::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="265::3" target="265::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="265::1" target="265::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="265::0" target="11::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="74::0" target="62::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="70::1" source="71::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="71::0" target="11::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="64::0" target="28::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="66::0" target="64::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="11::0" target="10::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="11::0" target="10::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="11::0" target="10::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="11::0" target="10::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="11::0" target="10::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="11::0" target="10::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="11::0" target="10::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="10::0" target="66::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="10::0" target="74::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="10::0" target="416::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">128</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="5::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="2::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="78::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="104::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="130::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="156::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="182::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="208::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="7::0" target="8::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="6::0" target="7::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="6::0" target="29::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="6::0" source="23::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="6::0" target="50::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="4::0" target="6::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="2::1" source="409::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="409::0" source="3::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="3::0" source="235::1"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
  </graph>
</graphml>
